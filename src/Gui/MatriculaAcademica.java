/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.AbstractTableModel;
import universidad.*;

/**
 *
 * @author joseph
 */
public class MatriculaAcademica extends javax.swing.JInternalFrame {

    Universidad College;
    Estudiante logueado;
  


    /**
     * Creates new form MatriculaAcademica
     *
     * @param u
     */
    
    
    
    public MatriculaAcademica(Universidad u, Estudiante logueado) {
        this.College = u;
        this.logueado = logueado; 
        
        initComponents();

        PeriodoField.setText(u.getPeriodoActual().toString());
        Estudiantecod.setText(Integer.toString(logueado.getCodigo()));
        EstudianteField.setText(logueado.toString() );

        BuscarAsignatura BA = new BuscarAsignatura();
        AsignaturaCod.addActionListener(BA);

        MatriculaCurso ba = new MatriculaCurso();
        GrupoField.addActionListener(ba);
        jMatricula.addActionListener(ba);
        CancelarMatricula cm = new  CancelarMatricula();
        Cancelar.addActionListener(cm);
        
          
        
        this.Table.setModel(new AbstractTableModel() {

            @Override
            public int getRowCount() { 

                if (College.logueado.getTabuladoActual() == null) {
                    return 0;
                }
                return College.logueado.getTabuladoActual().getMatriculas().size();
            }

            @Override
            public int getColumnCount() {
                return 4;
            }

            @Override
            public String getColumnName(int ColumIndex) {
                switch (ColumIndex) {
                    case 0:
                        return "Codigo";
                    case 1:
                        return "Asignatura";
                    case 2:
                        return "Grupo";
                    case 3: 
                        return "Estado";
                }
                
                return "";
            }

            @Override
            public Object getValueAt(int RowIndex, int ColumnIndex) {
                Matricula matri = College.logueado.getTabuladoActual().getMatriculas().get(RowIndex);
                switch (ColumnIndex) {
                    case 0:
                        return matri.getCurso().getAsignatura().getCodigo();
                    case 1:
                        return matri.getCurso().getAsignatura().getNombre();
                    case 2:
                        return matri.getCurso().getGrupo();
                    case 3:
                        return matri.getCurso().toEstado();
                        
                }
                return "";
            }
        });
   
    }

    public JTable getTable() {
        return Table;
    }
    
    public void MostrarEstudiante(){
        
                for (Curso c : College.getPeriodoActual().getCursos()) {
                     JOptionPane.showMessageDialog(Table,"Estudiantes Matriculasdos"+ c.getEstudiantesMatriculados());
               }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        PeriodoField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Estudiantecod = new javax.swing.JTextField();
        EstudianteField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        AsignaturaCod = new javax.swing.JTextField();
        AsignaturaField = new javax.swing.JTextField();
        GrupoField = new javax.swing.JTextField();
        jMatricula = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        Cancelar = new javax.swing.JButton();

        jToolBar1.setRollover(true);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setVisible(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("Matricula Academica");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Periodo :");

        PeriodoField.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Estudiante :");

        Estudiantecod.setEditable(false);

        EstudianteField.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Asignatura :");

        AsignaturaField.setEditable(false);

        jMatricula.setText("Matricular");
        jMatricula.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setToolTipText("Para cancelar un curso Por favor digte la informacion en los campos de arriba ");
        Table.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(Table);

        Cancelar.setText("Cancelar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PeriodoField, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(AsignaturaField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                                .addComponent(GrupoField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(55, 55, 55)
                                .addComponent(Estudiantecod, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(EstudianteField, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(55, 55, 55)
                                .addComponent(AsignaturaCod, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(330, 330, 330)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(PeriodoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Estudiantecod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EstudianteField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(AsignaturaCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AsignaturaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GrupoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(Cancelar))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AsignaturaCod;
    private javax.swing.JTextField AsignaturaField;
    private javax.swing.JButton Cancelar;
    private javax.swing.JTextField EstudianteField;
    private javax.swing.JTextField Estudiantecod;
    private javax.swing.JTextField GrupoField;
    private javax.swing.JTextField PeriodoField;
    private javax.swing.JTable Table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jMatricula;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    public Universidad getCollege() {
        return College;
    }

    public Estudiante getLogueado() {
        return logueado;
    }

    public void setLogueado(Estudiante logueado) {
        this.logueado = logueado;
    }

    
    
    
    
    Asignatura asig = null;
    Matricula matricula = null;
    
    public class BuscarAsignatura implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent ae) {

            try {
                if(College==null){
                    System.out.println("Es NULO");
                }else{
                    System.out.println("La U si existe");
                }
                asig = College.BuscaAsignatura(Integer.parseInt(AsignaturaCod.getText()));
                AsignaturaField.setText(asig.toString());

            } catch (ObjectNotFoundException ex) {
                Logger.getLogger(MatriculaAcademica.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(Table, ex.getMessage());
                
            }

        }
    }

    public class MatriculaCurso implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent ae) {
            Curso curso = null;
            try{
              
                       curso = College.getPeriodoActual().BuscarCurso(asig, Integer.parseInt(GrupoField.getText()));
                  
//               JOptionPane.show
                int n = JOptionPane.showConfirmDialog(Table, "Desea matricular " + curso.getAsignatura().getNombre() + " en el grupo " + curso.getGrupo(), "SIRA", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
                if (n == 0) {
                    Table.updateUI();
                    
                    Tabulado Tabulado = new Tabulado(College.getPeriodoActual());
                    College.logueado.AddTabulado(Tabulado);

                    matricula = new Matricula(curso, new Date());
                    College.logueado.getTabuladoActual().AddMatricula(matricula);
                    curso.AgregarEstudiante(College.logueado);
                    AsignaturaCod.setText("");
                    AsignaturaField.setText("");
                    GrupoField.setText("");
                    
                  
                
                }
            } catch (NumberFormatException | ObjectNotFoundException ex) {
                Logger.getLogger(MatriculaAcademica.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(Table, ex.getMessage());
            } catch (Exception ex) {
                Logger.getLogger(MatriculaAcademica.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(Table, ex.getMessage());
            }

        }
    }
    
    public class CancelarMatricula implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent ae) {
            try {
                
                if("".equals(GrupoField.getText())){
                    throw new NumberFormatException("por favor digite una asignatura");
                }
                Curso curso = College.getPeriodoActual().BuscarCurso(asig, matricula.getCurso().getGrupo());
                
                int n = JOptionPane.showConfirmDialog(Table, "Desea cancelar la Asignatura"+" "+ curso.getAsignatura().getNombre() +"  "+ " en el grupo " + curso.getGrupo(), "SIRA", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
                if (n ==0){
                    Table.updateUI();
                    College.logueado.getTabuladoActual().CancelarCurso(asig.getCodigo(), matricula.getCurso().getGrupo(),College.logueado.getPrograma());
                    matricula.getCurso().getEstudiantesMatriculados().remove(logueado);
                    
                    MostrarEstudiante();
                }
                    
                
                
            } catch (ObjectNotFoundException ex) {
                Logger.getLogger(MatriculaAcademica.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(Table, ex.getMessage());
            } catch (Exception ex) {
                Logger.getLogger(MatriculaAcademica.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(Table, ex.getMessage());
            }
                    
        }
        
        
    }

}
